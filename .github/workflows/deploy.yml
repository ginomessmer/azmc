name: Deploy

on:
  workflow_dispatch: 
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: development
        type: environment

permissions: 
  id-token: write

jobs:
  what_if:
    runs-on: ubuntu-latest
    name: What If
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: What If
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group what-if \
              -f infra/main.bicep \
              -g ${{ secrets.AZURE_RG_NAME }} \
              -p discordBotPublicKey="${{ secrets.DISCORD_BOT_PUBLIC_KEY }}" \
              -p discordBotToken="${{ secrets.DISCORD_BOT_TOKEN }}" \
              ${{ vars.AZ_DEPLOYMENT_INLINE_PARAMS }} > what-if

      # Create string output of Whatif
      - name: Create String Output
        id: whatif-string
        run: |
          WHATIF=$(cat whatif)
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      # Publish Terraform Plan as task summary
      - name: Publish Whatif to Task Summary
        env:
          SUMMARY: ${{ steps.whatif-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Azure
    needs: what_if
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Infrastructure to Azure
        uses: azure/cli@v1
        with:
          inlineScript: |
            az deployment group create \
              -f infra/main.bicep \
              -g ${{ secrets.AZURE_RG_NAME }} \
              -p discordBotPublicKey="${{ secrets.DISCORD_BOT_PUBLIC_KEY }}" \
              -p discordBotToken="${{ secrets.DISCORD_BOT_TOKEN }}" \
              ${{ vars.AZ_DEPLOYMENT_INLINE_PARAMS }}
